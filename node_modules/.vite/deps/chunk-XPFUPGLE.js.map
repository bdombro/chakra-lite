{
  "version": 3,
  "sources": ["../../../../../node_modules/is-what/dist/index.es.js"],
  "sourcesContent": ["/**\r\n * Returns the object type of the given payload\r\n *\r\n * @param {*} payload\r\n * @returns {string}\r\n */\r\nfunction getType(payload) {\r\n    return Object.prototype.toString.call(payload).slice(8, -1);\r\n}\r\n/**\r\n * Returns whether the payload is undefined\r\n *\r\n * @param {*} payload\r\n * @returns {payload is undefined}\r\n */\r\nfunction isUndefined(payload) {\r\n    return getType(payload) === 'Undefined';\r\n}\r\n/**\r\n * Returns whether the payload is null\r\n *\r\n * @param {*} payload\r\n * @returns {payload is null}\r\n */\r\nfunction isNull(payload) {\r\n    return getType(payload) === 'Null';\r\n}\r\n/**\r\n * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is PlainObject}\r\n */\r\nfunction isPlainObject(payload) {\r\n    if (getType(payload) !== 'Object')\r\n        return false;\r\n    const prototype = Object.getPrototypeOf(payload);\r\n    return prototype.constructor === Object && prototype === Object.prototype;\r\n}\r\n/**\r\n * Returns whether the payload is a plain JavaScript object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is PlainObject}\r\n */\r\nfunction isObject(payload) {\r\n    return isPlainObject(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a an empty object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is { [K in any]: never }}\r\n */\r\nfunction isEmptyObject(payload) {\r\n    return isPlainObject(payload) && Object.keys(payload).length === 0;\r\n}\r\n/**\r\n * Returns whether the payload is a an empty object (excluding special classes or objects with other prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is PlainObject}\r\n */\r\nfunction isFullObject(payload) {\r\n    return isPlainObject(payload) && Object.keys(payload).length > 0;\r\n}\r\n/**\r\n * Returns whether the payload is an any kind of object (including special classes or objects with different prototypes)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is PlainObject}\r\n */\r\nfunction isAnyObject(payload) {\r\n    return getType(payload) === 'Object';\r\n}\r\n/**\r\n * Returns whether the payload is an object like a type passed in < >\r\n *\r\n * Usage: isObjectLike<{id: any}>(payload) // will make sure it's an object and has an `id` prop.\r\n *\r\n * @template T this must be passed in < >\r\n * @param {*} payload\r\n * @returns {payload is T}\r\n */\r\nfunction isObjectLike(payload) {\r\n    return isAnyObject(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a function (regular or async)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is AnyFunction}\r\n */\r\nfunction isFunction(payload) {\r\n    return typeof payload === 'function';\r\n}\r\n/**\r\n * Returns whether the payload is an array\r\n *\r\n * @param {any} payload\r\n * @returns {payload is any[]}\r\n */\r\nfunction isArray(payload) {\r\n    return getType(payload) === 'Array';\r\n}\r\n/**\r\n * Returns whether the payload is a an array with at least 1 item\r\n *\r\n * @param {*} payload\r\n * @returns {payload is any[]}\r\n */\r\nfunction isFullArray(payload) {\r\n    return isArray(payload) && payload.length > 0;\r\n}\r\n/**\r\n * Returns whether the payload is a an empty array\r\n *\r\n * @param {*} payload\r\n * @returns {payload is []}\r\n */\r\nfunction isEmptyArray(payload) {\r\n    return isArray(payload) && payload.length === 0;\r\n}\r\n/**\r\n * Returns whether the payload is a string\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isString(payload) {\r\n    return getType(payload) === 'String';\r\n}\r\n/**\r\n * Returns whether the payload is a string, BUT returns false for ''\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isFullString(payload) {\r\n    return isString(payload) && payload !== '';\r\n}\r\n/**\r\n * Returns whether the payload is ''\r\n *\r\n * @param {*} payload\r\n * @returns {payload is string}\r\n */\r\nfunction isEmptyString(payload) {\r\n    return payload === '';\r\n}\r\n/**\r\n * Returns whether the payload is a number (but not NaN)\r\n *\r\n * This will return `false` for `NaN`!!\r\n *\r\n * @param {*} payload\r\n * @returns {payload is number}\r\n */\r\nfunction isNumber(payload) {\r\n    return getType(payload) === 'Number' && !isNaN(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a positive number (but not 0)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is number}\r\n */\r\nfunction isPositiveNumber(payload) {\r\n    return isNumber(payload) && payload > 0;\r\n}\r\n/**\r\n * Returns whether the payload is a negative number (but not 0)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is number}\r\n */\r\nfunction isNegativeNumber(payload) {\r\n    return isNumber(payload) && payload < 0;\r\n}\r\n/**\r\n * Returns whether the payload is a boolean\r\n *\r\n * @param {*} payload\r\n * @returns {payload is boolean}\r\n */\r\nfunction isBoolean(payload) {\r\n    return getType(payload) === 'Boolean';\r\n}\r\n/**\r\n * Returns whether the payload is a regular expression (RegExp)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is RegExp}\r\n */\r\nfunction isRegExp(payload) {\r\n    return getType(payload) === 'RegExp';\r\n}\r\n/**\r\n * Returns whether the payload is a Map\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Map<any, any>}\r\n */\r\nfunction isMap(payload) {\r\n    return getType(payload) === 'Map';\r\n}\r\n/**\r\n * Returns whether the payload is a WeakMap\r\n *\r\n * @param {*} payload\r\n * @returns {payload is WeakMap<any, any>}\r\n */\r\nfunction isWeakMap(payload) {\r\n    return getType(payload) === 'WeakMap';\r\n}\r\n/**\r\n * Returns whether the payload is a Set\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Set<any>}\r\n */\r\nfunction isSet(payload) {\r\n    return getType(payload) === 'Set';\r\n}\r\n/**\r\n * Returns whether the payload is a WeakSet\r\n *\r\n * @param {*} payload\r\n * @returns {payload is WeakSet<any>}\r\n */\r\nfunction isWeakSet(payload) {\r\n    return getType(payload) === 'WeakSet';\r\n}\r\n/**\r\n * Returns whether the payload is a Symbol\r\n *\r\n * @param {*} payload\r\n * @returns {payload is symbol}\r\n */\r\nfunction isSymbol(payload) {\r\n    return getType(payload) === 'Symbol';\r\n}\r\n/**\r\n * Returns whether the payload is a Date, and that the date is valid\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Date}\r\n */\r\nfunction isDate(payload) {\r\n    return getType(payload) === 'Date' && !isNaN(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a Blob\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Blob}\r\n */\r\nfunction isBlob(payload) {\r\n    return getType(payload) === 'Blob';\r\n}\r\n/**\r\n * Returns whether the payload is a File\r\n *\r\n * @param {*} payload\r\n * @returns {payload is File}\r\n */\r\nfunction isFile(payload) {\r\n    return getType(payload) === 'File';\r\n}\r\n/**\r\n * Returns whether the payload is a Promise\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Promise<any>}\r\n */\r\nfunction isPromise(payload) {\r\n    return getType(payload) === 'Promise';\r\n}\r\n/**\r\n * Returns whether the payload is an Error\r\n *\r\n * @param {*} payload\r\n * @returns {payload is Error}\r\n */\r\nfunction isError(payload) {\r\n    return getType(payload) === 'Error';\r\n}\r\n/**\r\n * Returns whether the payload is literally the value `NaN` (it's `NaN` and also a `number`)\r\n *\r\n * @param {*} payload\r\n * @returns {payload is typeof NaN}\r\n */\r\nfunction isNaNValue(payload) {\r\n    return getType(payload) === 'Number' && isNaN(payload);\r\n}\r\n/**\r\n * Returns whether the payload is a primitive type (eg. Boolean | Null | Undefined | Number | String | Symbol)\r\n *\r\n * @param {*} payload\r\n * @returns {(payload is boolean | null | undefined | number | string | symbol)}\r\n */\r\nfunction isPrimitive(payload) {\r\n    return (isBoolean(payload) ||\r\n        isNull(payload) ||\r\n        isUndefined(payload) ||\r\n        isNumber(payload) ||\r\n        isString(payload) ||\r\n        isSymbol(payload));\r\n}\r\n/**\r\n * Returns true whether the payload is null or undefined\r\n *\r\n * @param {*} payload\r\n * @returns {(payload is null | undefined)}\r\n */\r\nconst isNullOrUndefined = isOneOf(isNull, isUndefined);\r\nfunction isOneOf(a, b, c, d, e) {\r\n    return (value) => a(value) || b(value) || (!!c && c(value)) || (!!d && d(value)) || (!!e && e(value));\r\n}\r\n/**\r\n * Does a generic check to check that the given payload is of a given type.\r\n * In cases like Number, it will return true for NaN as NaN is a Number (thanks javascript!);\r\n * It will, however, differentiate between object and null\r\n *\r\n * @template T\r\n * @param {*} payload\r\n * @param {T} type\r\n * @throws {TypeError} Will throw type error if type is an invalid type\r\n * @returns {payload is T}\r\n */\r\nfunction isType(payload, type) {\r\n    if (!(type instanceof Function)) {\r\n        throw new TypeError('Type must be a function');\r\n    }\r\n    if (!Object.prototype.hasOwnProperty.call(type, 'prototype')) {\r\n        throw new TypeError('Type is not a class');\r\n    }\r\n    // Classes usually have names (as functions usually have names)\r\n    const name = type.name;\r\n    return getType(payload) === name || Boolean(payload && payload.constructor === type);\r\n}\n\nexport { getType, isAnyObject, isArray, isBlob, isBoolean, isDate, isEmptyArray, isEmptyObject, isEmptyString, isError, isFile, isFullArray, isFullObject, isFullString, isFunction, isMap, isNaNValue, isNegativeNumber, isNull, isNullOrUndefined, isNumber, isObject, isObjectLike, isOneOf, isPlainObject, isPositiveNumber, isPrimitive, isPromise, isRegExp, isSet, isString, isSymbol, isType, isUndefined, isWeakMap, isWeakSet };\n"],
  "mappings": "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",
  "names": []
}
